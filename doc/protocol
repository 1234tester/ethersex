etherrape protocol (commandline client)
=======================================

When the etherrape commandline service is enabled, the etherrape can be
controlled and configured via TCP on port 2847 using protocol defined below.
This document describes protocol version 1.0. Differences in the minor
version SHOULD retain compatibility, on both, server and client side.
Protocol versions with different major number are incompatible.

After establishing the connection, the etherrape and the client can exchange
message datagrams.  A message datagram has fixed length of 8 bytes:

| <-                            32 bit                             ->|
+--------------------------------------------------------------------+
| subsystem (8bit) | command (8bit) |          parms (rest)          |
+--------------------------------------------------------------------+
|                         ...parameters...                           |
+--------------------------------------------------------------------+

Some commands may sepecify that more data follows (eg. for uploading files).

Each message datagram (command) triggers a response datagram, when no other
response datagram is specified in the subsystem:

| <-                            32 bit                             ->|
+--------------------------------------------------------------------+
| subsystem (8bit) | old_subsys (8bit) | status (8bit) | don't care  |
+--------------------------------------------------------------------+
|                             don't care                             |
+--------------------------------------------------------------------+

Where status is either 0 (everything ok, command execution done) or nonzero
to signal different, subsystem-specific error conditions.

subsystems
==========

0x00 version information
0x05 onewire communication
0x06 fs20
0x07 file storage
0xff default response


version information
===================

commands (request):
0x00 request version (no parameters)

commands (response):
0x01 send version, parameters: major (8bit), minor (8bit)


onewire communication
=====================

commands (request):
0x00 request onewire discover (no parameters)

commands (response):
0x01 send next onewire id, parameters: status (8bit)
     status: 0: more ids follow
             1: last id reached
     followed by 8 byte additional data, containing the onewire id


fs20
====

commands (request):
0x00 send fs20 command, parameters: housecode (16bit), address (8bit), command (8bit)


file storage
============

commands (request):
0x00 request directory listing, parameters: length (8bit)
     followed by length bytes directory name
0x01 upload file, parameters: filename length (8bit),
                              data length (32bit)
     followed by the filename and the data
